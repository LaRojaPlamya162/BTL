/*#include <SDL.h>
#include <iostream>
#include <SDL_image.h>
int main(int argc,char* argv[])
{
    SDL_Renderer* renderer;
    SDL_Window* window;
    SDL_Texture* texture;
    SDL_Rect car;
    SDL_Rect pic;
    car.x = 0;
    car.y = 0;
    car.h = 240;
    car.w = 160;
    pic.x = 800*2/5;
    pic.y = 800-src.h;
    pic.w = src.w;
    pic.h = src.h;
    if (SDL_Init(SDL_INIT_EVERYTHING)==0)
        {
            std::cout<<"Subsystem Intialised!..."<<std::endl;
            window=SDL_CreateWindow("Window Tutorial",0,0,800,800,false);
            if (window)
            {
                SDL_SetRenderDrawColor(renderer,255,255,255,255);
                std::cout<<"Window created"<<std::endl;
            }
        renderer = SDL_CreateRenderer(window,-1,0);
        if (renderer)
        {
            std::cout<<"Renderer created"<<std::endl;
        }
        }
            SDL_Surface* surface = IMG_Load("car.png");
            if (surface == NULL)
            {
                std::cout << "Unable to load image "<<std::endl;
            }
            texture = SDL_CreateTextureFromSurface(renderer,surface);
            SDL_RenderCopy(renderer,texture,&src,&desc);
            SDL_RenderPresent(renderer);
        SDL_SetRenderDrawColor( renderer, 0xFF, 0xFF, 0xFF, 0xFF );
            bool quit = false;

			//Event handler
			SDL_Event e;

			//While application is running
			while( !quit )
			{
				//Handle events on queue
				while( SDL_PollEvent( &e ) != 0 )
				{
					//User requests quit
					if( e.type == SDL_QUIT )
					{
						quit = true;
					}
				}
                for (int i=0;i<=800;i+=800/5)
                {
                    SDL_RenderDrawLine(renderer,i,0,i,800);
                    SDL_RenderPresent(renderer);
                }
            }

}
